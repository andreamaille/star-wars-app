{"version":3,"sources":["components/Header.js","apis/swapi.js","actions/index.js","components/Preloader.js","components/Buttons.js","components/CharacterList.js","components/CharacterView.js","components/App.js","reducers/paginationReducer.js","reducers/index.js","reducers/characterReducer.js","reducers/spaceshipReducer.js","reducers/selectedCharacter.js","index.js"],"names":["Header","css","header","data-test","tabIndex","h1","h2","role","aria-label","height","margin","textAlign","backgroundColor","fontFamily","border","fontSize","color","padding","fontWeight","getCharacters","getSpaceships","fetch","swal","withReactContent","Swal","fetchCharacters","dispatch","a","characters","Promise","all","map","url","then","response","json","data","results","item","type","payload","catch","error","length","fire","text","selectCharacter","character","Preloader","preloader","width","timeout","Buttons","this","props","currentPage","totalPages","buttonContainer","inactive","button","onClick","previousPage","nextPage","Component","connect","state","pagination","itemsPerPage","lightYellow","cursor","ListCharacters","spliceArray","array","curVal","index","splice","combineArray","array1","array2","reduce","slice","renderList","spaceships","firstItem","lastItem","getSpaceshipsAndCharacters","key","name","replace","birth_year","listItem","to","characterName","characterStats","statItem","mass","model","title","fetchSpaceships","mainContent","borderBottom","textDecoration","listStyleType","display","selectedCharacter","eye_color","gender","hair_color","skin_color","exact","App","wrapper","path","component","CharacterList","CharacterView","combineReducers","action","pages","total","Math","floor","indexOfLastItem","indexOfFirstItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4627ebdb.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst Header = () => {\n    return (\n        <header css={header} data-test='header'>\n            <h1 tabIndex=\"1\" css={h1} data-test='title'>Star Wars</h1>\n            <h2 tabIndex=\"2\" css={h2}>\n                <span role='img' aria-label='stars emoji'>✨</span>\n                Characters from the series\n                <span role='img' aria-label='stars emoji'>✨</span>\n            </h2>\n        </header>\n    )\n}\n\nexport default Header\n\n// Style\nconst header = css({\n    height: '30vh',\n    margin: '25px 0',\n    textAlign: 'center',\n    backgroundColor: '#1c1f22',\n    fontFamily: 'Ariel, sans-serif',\n    border: '3px solid #000000'\n})\n\nconst h1 = css({\n    fontSize: '80px',\n    color: '#ffdf1d',\n    margin: '30px 0 5px',\n    padding: '0'\n})\n\nconst h2 = css({\n    fontSize: '25px',\n    fontWeight: '300',\n    color: '#ffdf1d',\n    margin: '5px',\n    padding: '0'\n})\n","export const getCharacters = [\n    'https://swapi.co/api/people/?page=1',\n    'https://swapi.co/api/people/?page=2',\n    'https://swapi.co/api/people/?page=3',\n    'https://swapi.co/api/people/?page=4',\n    'https://swapi.co/api/people/?page=5',\n    'https://swapi.co/api/people/?page=6',\n    'https://swapi.co/api/people/?page=7',\n    'https://swapi.co/api/people/?page=8',\n]\n\nexport const getSpaceships = fetch('https://swapi.co/api/starships/?page=1')","import { getCharacters, getSpaceships } from \"../apis/swapi\";\n// Sweet Alerts\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst swal = withReactContent(Swal)\n\nexport const fetchCharacters = () => async (dispatch) => {\n    let characters = []\n\n    await Promise.all(getCharacters.map(url =>\n        fetch(url)\n        .then(function (response) {\n            return response.json()\n        })\n        .then(function (data){\n            for (let item of data.results) {\n                characters = [\n                    ...characters,\n                    item\n                ]\n            }\n            dispatch({\n                type: 'FETCH_CHARACTERS',\n                payload: characters\n            })\n        })\n    )).catch(error => {\n        if (!characters.length) {\n            swal.fire({\n                type: 'error',\n                text: `Sorry! We can't get Star Wars characters at this time. Check back later!`\n            })\n        }\n    })\n}\n\nexport const fetchSpaceships = () => async (dispatch) => {\n    await getSpaceships\n        .then(response => response.json())\n        .then((data) => {\n            dispatch({\n                type: 'FETCH_SPACESHIPS',\n                payload: data.results\n            })\n        })\n        .catch(error => {\n            swal.fire({\n                type: 'error',\n                text: `Thanks for visiting! We usually have spaceships 🚀 around here but they're on a mission. Check back later to see if they've come back! `\n            })\n        })\n}\n\nexport const selectCharacter = (character) => {\n    return {\n        type: 'SELECTED_CHARACTER',\n        payload: character\n    }\n}\n\nexport const nextPage = () => {\n    return {\n        type: 'NEXT_PAGE'\n    }\n}\n\nexport const previousPage = () => {\n    return {\n        type: 'PREVIOUS_PAGE'\n    }\n}\n\nexport const totalPages = (array) => {\n    return {\n        type: 'TOTAL_PAGES',\n        payload: array\n    }\n}\n\nexport const combineArray = (array1, array2) => {\n    return {\n        type: 'COMBINE_ARRAY',\n        payload: {\n            array1,\n            array2\n        }\n    }\n}","import Loader from 'react-loader-spinner'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst Preloader = () => {\n    return (\n        <div css={preloader}>\n            <Loader\n                type=\"TailSpin\"\n                color=\"#ffdf1d\"\n                height={150}\n                width={150}\n                timeout={20000}\n            />\n        </div>\n    )\n}\n\nexport default Preloader\n\n// Style\nconst preloader = css({\n    textAlign: 'center'\n})","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { nextPage, previousPage } from '../actions'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nclass Buttons extends Component { \n    render() {\n        const {\n            currentPage,\n            totalPages,\n        } = this.props \n\n        return (\n            <div css={buttonContainer}>\n                <button css={currentPage === 1 ? inactive : button} onClick={() => this.props.previousPage()}>Previous</button>\n                <button css={totalPages === currentPage ? inactive : button} onClick={() => this.props.nextPage()}>Next</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentPage: state.pagination.currentPage,\n        itemsPerPage: state.pagination.itemsPerPage,\n        totalPages: state.pagination.totalPages\n    }\n}\n\nexport default connect(mapStateToProps, { nextPage, previousPage })(Buttons)\n\n\n// Style\nconst buttonContainer = css({\n    width: '50%',\n    textAlign: 'center',\n    margin: '0 auto',\n    padding: '20px 0'\n})\n\nconst lightYellow = css({\n    backgroundColor: '#f7ef99'\n})\n\nconst button = css({\n    cursor: 'pointer',\n    padding: '10px',\n    width: 'calc(100% / 2)',\n    color: '#1c1f22',\n    border: '2px solid #1c1f22',\n    backgroundColor: '#ffdf1d',\n    ':hover,:focus,:active': lightYellow\n})\n\nconst inactive= css({\n    cursor: 'default',\n    padding: '10px',\n    width: 'calc(100% / 2)',\n    color: '#1c1f22',\n    border: '2px solid #1c1f22',\n    backgroundColor: '#c8c8c8'\n})\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { fetchCharacters, selectCharacter, fetchSpaceships, totalPages } from '../actions'\nimport Preloader from './Preloader.js'\nimport Buttons from './Buttons.js'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nclass ListCharacters extends Component {\n    componentDidMount() {\n        if (!this.props.characters.length) {\n            this.props.fetchCharacters()\n            this.props.fetchSpaceships()\n        }\n    }\n\n    spliceArray = (array, curVal, index) => {\n        array.splice(index * 8 - 1, 0, curVal)\n        return array\n    }\n\n    combineArray = (array1, array2) => {\n        return array1.reduce(this.spliceArray, array2.slice())\n    }\n\n    renderList = () => {\n        const {\n            characters,\n            spaceships,\n            firstItem, \n            lastItem\n        } = this.props\n\n        // get a combined list of characters where spaceship is every 8th item\n        const getSpaceshipsAndCharacters = this.combineArray(spaceships, characters)\n\n        // call action to update total number of pages in redux based on combined array\n        this.props.totalPages(getSpaceshipsAndCharacters)\n\n        // current items to render on page\n        const currentItems = getSpaceshipsAndCharacters.slice(firstItem, lastItem)\n\n        return currentItems.map((item) => {\n            // unique key for url route\n            const key = item.name.replace(/\\s+/g, '_')\n\n            if (!item.birth_year) {\n                // rendering for spaceships \n                return (\n                    <div css={listItem} key={item.model}>\n                        <h2 css={title}>\n                            <span role='img' aria-label='spaceship emoji'>🚀🚀</span>\n                            {item.name} \n                            <span role='img' aria-label='spaceship emoji'>🚀🚀</span>\n                        </h2>\n                    </div>\n                )\n            } else {\n                // rendering for characters\n                return (\n                    <div key={key}>\n                        <div css={listItem}>\n                            <Link\n                                to={`/${key}`}\n                                css={characterName}\n                                onClick={() => this.props.selectCharacter(item)}\n                            >\n                                <h3>{item.name}</h3>\n                            </Link>\n                            <ul css={characterStats}>\n                                <li css={statItem}>\n                                    <span role='img' aria-label='birthday cake emoji'>🎂</span>\n                                    Birth Year: {item.birth_year}\n                                </li>\n                                <li css={statItem}>\n                                    <span role='img' aria-label='thunderbolt emoji'>⚡️</span>\n                                    Height: {item.height}\n                                </li>\n                                <li css={statItem}>\n                                    <span role='img' aria-label='balance scale emoji'>⚖️</span>\n                                    Mass: {item.mass}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                )\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.props.characters.length ? <Preloader /> :\n                    <main css={mainContent}>\n                        <section>\n                            {this.renderList()}\n                            <Buttons />\n                        </section>\n                    </main>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        characters: state.characters,\n        spaceships: state.spaceships,\n        currentPage: state.pagination.currentPage,\n        itemsPerPage: state.pagination.itemsPerPage,\n        firstItem: state.pagination.firstItem,\n        lastItem: state.pagination.lastItem\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {   fetchCharacters, \n        selectCharacter,\n        fetchSpaceships,\n        totalPages\n    }\n    )(ListCharacters)\n\n\n// Style\nconst mainContent = css({\n    margin: '25px 0',\n    width: '100%',\n    backgroundColor: '#1c1f22',\n    border: '3px solid #000000',\n    fontFamily: 'Ariel, sans-serif'\n})\n\nconst listItem = css({\n    width: '85%',\n    margin: '0 auto',\n    padding: '25px',\n    borderBottom: '2px solid #000000'\n})\n\nconst lightYellow = css({\n    color: '#f7ef99'\n})\n\nconst characterName = css({\n    fontSize: '25px',\n    margin: '0',\n    color: '#ffdf1d',\n    textDecoration: 'none',\n    ':hover,:focus,:active': lightYellow\n})\n\nconst characterStats = css({\n    margin: '0',\n    padding: '0',\n    listStyleType: 'none',\n    display: 'flex'\n})\n\nconst statItem = css({\n    width: 'calc(100% / 3)',\n    margin: '0',\n    padding: '0',\n    listStyleType: 'none'\n})\n\nconst title = css({\n    textAlign: 'center',\n    fontSize: '30px'\n})\n","import { connect } from 'react-redux'\nimport { fetchCharacters, selectCharacter } from '../actions'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { Link } from 'react-router-dom'\n\n\nconst CharacterView = ({character}) => {\n    return (\n        <div css={mainContent}>\n            <p css={title} tabIndex='3'>Character Details for {character.name}</p>\n            <ul css={characterStats}>\n                <li css={statItem} tabIndex='4'>\n                    <span role='img' aria-label='eye emoji'>👁</span>\n                    Eye Color: {character.eye_color}\n                </li>\n                <li css={statItem} tabIndex='5'>\n                    <span role='img' aria-label='stars emoji'>✨</span>\n                    Gender: {character.gender}\n                </li>\n                <li css={statItem} tabIndex='6'>\n                    <span role='img' aria-label='women getting haircut emoji'> 💇‍♀️ </span>\n                    Hair Color: {character.hair_color}\n                </li>\n                <li css={statItem }tabIndex='7'>\n                    <span role='img' aria-label='paint palette emoji'>🎨</span>\n                    Skin Color: {character.skin_color}\n                </li>\n            </ul>\n            <Link to=\"/\" exact css={button}><p tabIndex='8'>Go back to Main List</p></Link>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        characters: state.characters,\n        spaceships: state.spaceships,\n        character: state.selectedCharacter\n    }\n}\n\nexport default connect(mapStateToProps, { fetchCharacters, selectCharacter })(CharacterView)\n\n\n// Style\nconst title = css({\n    textAlign: 'center',\n    fontSize: '30px',\n    color: '#ffdf1d'\n})\n\nconst characterStats = css({\n    margin: '0',\n    padding: '0',\n    listStyleType: 'none',\n})\n\nconst statItem = css({\n    textAlign: 'center',\n    margin: '5px 0'\n})\n\nconst mainContent = css({\n    margin: '25px 0',\n    padding: '50px 0',\n    width: '100%',\n    backgroundColor: '#1c1f22',\n    border: '3px solid #000000',\n    fontFamily: 'Ariel, sans-serif'\n})\n\nconst lightYellow = css({\n    backgroundColor: '#f7ef99'\n})\n\nconst button = css({\n    width: '25%',\n    display: 'block',\n    margin: '20px auto',\n    textDecoration: 'none',\n    textAlign: 'center',\n    padding: '10px',\n    color: '#1c1f22',\n    border: '2px solid #1c1f22',\n    backgroundColor: '#ffdf1d',\n    ':hover,:focus,:active': lightYellow\n})","import { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './Header'\nimport CharacterList from './CharacterList'\nimport CharacterView from './CharacterView'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst App = () => {\n    return (\n        <div>\n            <Router>\n                <div css={wrapper}>\n                    <Header />\n                    <Route exact path=\"/\" component={CharacterList}/>\n                    <Route exact path=\"/:name\" component={CharacterView} />\n                </div>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n\n// Style\nconst wrapper = css({\n    margin: '0 auto',\n    width: '85%'\n})\n","export default (state = {}, action) => {\n    const pages = {...state}\n\n    switch (action.type) {\n        case 'NEXT_PAGE':\n            if (pages.totalPages === pages.currentPage) {\n                return {\n                    ...state,\n                    currentPage: pages.currentPage\n                }\n            } else {\n                return {\n                    ...state,\n                    currentPage: pages.currentPage + 1\n                }\n            }\n        case 'PREVIOUS_PAGE':\n            if (pages.currentPage === 1) {\n                return {\n                    ...state,\n                    currentPage: pages.currentPage\n                }\n            } else {\n                return {\n                    ...state,\n                    currentPage: pages.currentPage - 1\n                }\n            }\n        case 'TOTAL_PAGES': {\n            const total = Math.floor(action.payload.length / pages.itemsPerPage)\n\n            const indexOfLastItem = pages.currentPage * pages.itemsPerPage\n\n            const indexOfFirstItem = indexOfLastItem - pages.itemsPerPage\n\n            return {\n                ...state,\n                totalPages: total,\n                firstItem: indexOfFirstItem,\n                lastItem: indexOfLastItem\n            }\n        }\n        default:\n            return {\n                currentPage: 1,\n                itemsPerPage: 10\n            }\n    }\n}\n","import { combineReducers } from 'redux'\nimport characters from './characterReducer'\nimport spaceships from './spaceshipReducer'\nimport selectedCharacter from './selectedCharacter'\nimport pagination from './paginationReducer'\n\nexport default combineReducers ({\n    characters,\n    spaceships,\n    selectedCharacter,\n    pagination\n})","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_CHARACTERS':\n            return action.payload\n        default:\n            return state\n    }\n}\n","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_SPACESHIPS':\n            return action.payload\n        default:\n            return state\n    }\n}","export default (state = [], action) => {\n    switch (action.type) {\n        case 'SELECTED_CHARACTER':\n            return action.payload\n        default:\n            return state\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers, \n    composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}